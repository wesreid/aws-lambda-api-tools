#!/usr/bin/env node
"use strict";var t=require("aws-cdk-lib"),e=require("aws-cdk-lib/aws-iam"),s=require("child_process");console.log("Starting GitHub OIDC IAM setup...");var i=process.argv.slice(2),c=i.find(o=>o.startsWith("--repo=")),n=i.find(o=>o.startsWith("--policy="));c||(console.error("Error: --repo argument is required"),console.error("Usage: create-gha-iam-stack --repo=owner/repo-name [--policy=PolicyName]"),console.error("Example: create-gha-iam-stack --repo=myorg/my-repo --policy=AdministratorAccess"),process.exit(1));var a=c.split("=")[1],l=n?n.split("=")[1]:"AdministratorAccess";console.log(`Configuring for repository: ${a}`);console.log(`Using policy: ${l}`);var p=new t.App,r=class extends t.Stack{constructor(m,d,g){super(m,d,g),console.log("Creating OIDC Provider...");let u=new e.CfnOIDCProvider(this,"GithubOidcProvider",{url:"https://token.actions.githubusercontent.com",clientIdList:["sts.amazonaws.com"],thumbprintList:["6938fd4d98bab03faadb97b34396831e3780aea1","1c58a3a8518e8759bf075b76b750d4f2df264fcd"]});console.log("Creating IAM Role...");let y=new e.Role(this,"GithubActionsRole",{assumedBy:new e.WebIdentityPrincipal(u.attrArn,{StringEquals:{"token.actions.githubusercontent.com:aud":"sts.amazonaws.com"},StringLike:{"token.actions.githubusercontent.com:sub":`repo:${a}:*`}}),managedPolicies:[e.ManagedPolicy.fromAwsManagedPolicyName(l)]});new t.CfnOutput(this,"RoleArn",{value:y.roleArn,description:"ARN of role to use in GitHub Actions"})}};console.log("Creating CloudFormation stack...");new r(p,"GithubActionsIam");console.log("Synthesizing CloudFormation template...");var f=p.synth();console.log("Starting deployment...");try{let o=["cdk deploy","GithubActionsIam","--require-approval never",`--app "${f.directory}"`].join(" ");console.log(`Executing: ${o}`),(0,s.execSync)(o,{stdio:"inherit",env:{...process.env,AWS_REGION:process.env.AWS_REGION||"us-east-1"}}),console.log("Deployment completed successfully!")}catch(o){console.error("Deployment failed:",o),process.exit(1)}
